html[data-theme=dark] {
  --body: #1e1e1e;
  --text: white;
  --primary: #3766bf;
  --secondary: #424242;
  --primary-shadow: #264684;
  --secondary-shadow: #353535;
  --good: #797979;
  --wrong: #ea4b4b; }

html[data-theme=light] {
  --body: #ececec;
  --text: black;
  --primary: #f7aa47;
  --secondary: lightgrey;
  --primary-shadow: #e7870a;
  --secondary-shadow: #c6c6c6;
  --good: #a0a0a0;
  --wrong: #ca6262; }

body {
  font-family: 'Rubik', sans-serif;
  display: grid;
  grid-template: auto 1fr 1fr auto / 1fr;
  background-image: url(pattern.svg);
  background-color: var(--body);
  background-repeat: repeat;
  background-size: contain;
  color: var(--text);
  margin: 0;
  height: 100vh; }
  @media (min-width: 1024px) {
    body {
      grid-template: auto 1fr auto / 1fr 2fr; } }
  body > * {
    padding: 0.5rem; }

header {
  background-color: var(--primary);
  box-shadow: 0 0 10px var(--primary-shadow);
  padding: .25rem 2rem;
  height: 5.5rem;
  display: grid;
  grid-template: 1fr 1fr / auto 1fr;
  align-items: center; }
  @media (min-width: 1024px) {
    header {
      grid-column: 1 / 3; } }
  @media (min-width: 600px) {
    header {
      grid-template: 1fr / 1fr 1fr 1fr; } }
  header > :first-child {
    display: grid;
    grid-template: 1fr / auto auto 1fr;
    align-items: center;
    gap: 0.5em; }
    @media (max-width: 600px) {
      header > :first-child {
        grid-row: -1; } }
    header > :first-child #title {
      margin: 0;
      display: inline-block; }
      @media (max-width: 600px) {
        header > :first-child #title {
          display: none; } }
    header > :first-child #theme {
      width: 2rem;
      height: 2rem;
      padding: 0; }
  @media (max-width: 600px) {
    header #action {
      grid-column: 1/4;
      display: flex;
      justify-content: center;
      gap: 0.25em; } }
  header #action #message {
    margin: 0 0 .5em; }
  header #action #jouer {
    width: 8rem;
    height: 2rem; }
  header #stats {
    text-align: right; }
    @media (max-width: 600px) {
      header #stats {
        grid-row: -1;
        grid-column: -1; }
        header #stats > p {
          margin: 0; } }

footer {
  grid-row: -1; }
  @media (min-width: 1024px) {
    footer {
      grid-column: 1 / 3; } }

aside {
  display: grid;
  justify-content: center;
  align-content: center; }

main {
  display: flex;
  flex-direction: column;
  justify-content: center;
  gap: 2em; }

button {
  border: none;
  padding: .375em .75em;
  border-radius: 5px;
  color: inherit;
  background-color: var(--secondary);
  font-family: inherit; }
  button:active, button.active {
    transform: translate(2px, 4px); }

a, a:hover, a:focus {
  color: inherit;
  text-decoration: none; }

.notDisplayed, template {
  display: none; }

#pendu {
  fill: transparent;
  stroke: var(--primary);
  stroke-width: 8px;
  stroke-linecap: round; }

#mot {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 1em; }
  #mot .lettre {
    width: 3rem;
    height: 3rem;
    display: grid;
    align-content: center;
    justify-content: center; }
    #mot .lettre > * {
      border-bottom: 3px solid var(--secondary);
      font-size: 35px;
      width: 35px;
      height: 40px;
      text-align: center; }

#clavier {
  display: flex;
  flex-wrap: wrap;
  align-content: flex-start;
  justify-content: center;
  gap: .75em;
  max-width: 700px;
  margin: 0 auto; }
  #clavier .lettreClavier {
    width: 4rem;
    height: 3rem;
    font-size: 1.5rem;
    background-color: var(--secondary);
    box-shadow: 1px 1px 2px var(--secondary);
    border: none;
    border-radius: 5px;
    display: grid;
    place-items: center; }
    #clavier .lettreClavier:not(.good):not(.wrong) {
      cursor: pointer; }
    #clavier .lettreClavier > span {
      font-weight: bold;
      user-select: none; }
    #clavier .lettreClavier.good > span {
      color: var(--good); }
    #clavier .lettreClavier.wrong > span {
      color: var(--wrong); }

/*# sourceMappingURL=style.css.map */

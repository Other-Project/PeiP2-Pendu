$themes: (
        dark: (
                'text-color': white,
                'bg-color': #1e1e1e,
                'primary-color': #3766bf,
                'secondary-color': #424242,
                'good-color': #797979,
                'wrong-color': #ea4b4b
        ),
        light: (
                'text-color': black,
                'bg-color': #ececec,
                'primary-color': #f7aa47,
                'secondary-color': lightgrey,
                'good-color': #a0a0a0,
                'wrong-color': #ca6262
        )
);
@each $theme, $map in $themes {
    html[data-theme=#{$theme}] {
        --body: #{map-get($map, 'bg-color')};
        --text: #{map-get($map, 'text-color')};
        --primary: #{map-get($map, 'primary-color')};
        --secondary: #{map-get($map, 'secondary-color')};
        --primary-shadow: #{darken(map-get($map, 'primary-color'), 15%)};
        --secondary-shadow: #{darken(map-get($map, 'secondary-color'), 1%)};
        --good: #{map-get($map, 'good-color')};
        --wrong: #{map-get($map, 'wrong-color')};
    }
}

body {
    font-family: 'Rubik', sans-serif;

    display: grid;
    grid-template: auto 1fr 1fr auto / 1fr;
    @media(min-width: 1024px) {
        grid-template: auto 1fr auto / 1fr 2fr;
    }

    background-image: url(pattern.svg);
    background-color: var(--body);
    background-repeat: repeat;
    background-size: contain;
    color: var(--text);

    margin: 0;
    height: 100vh;

    & > * {
        padding: 0.5rem;
    }
}

header {
    @media(min-width: 1024px) {
        grid-column: 1 / 3;
    }

    background-color: var(--primary);
    box-shadow: 0 0 10px var(--primary-shadow);
    padding: .25rem 2rem;
    height: 5.5rem;

    display: grid;
    grid-template: 1fr 1fr / auto 1fr;
    @media (min-width: 600px) {
        grid-template: 1fr / 1fr 1fr 1fr;
    }
    align-items: center;

    & > :first-child {
        @media (max-width: 600px) {
            grid-row: -1;
        }

        display: grid;
        grid-template: 1fr / auto auto 1fr;
        align-items: center;
        gap: 0.5em;

        #title {
            margin: 0;
            display: inline-block;
            @media(max-width: 600px) {
                display: none;
            }
        }

        #theme {
            width: 2rem;
            height: 2rem;
            padding: 0;
        }
    }

    #action {
        @media(max-width: 600px) {
            grid-column: 1/4;
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 0.25em;
        }

        #message {
            @media(max-width: 600px) {
                margin: 0;
            }
            margin: 0 0 .5em;
        }

        #playBtn {
            width: 8rem;
            height: 2rem;
        }
    }

    #stats {
        text-align: right;

        @media(max-width: 600px) {
            grid-row: -1;
            grid-column: -1;

            & > p {
                margin: 0;
            }
        }
    }
}

footer {
    @media(min-width: 1024px) {
        grid-column: 1 / 3;
    }
    grid-row: -1;
}

aside {
    display: grid;
    justify-content: center;
    align-content: center;
    grid-row: 2;
}

main {
    display: flex;
    flex-direction: column;
    justify-content: center;
    gap: 2em;
    grid-row: 2;
    grid-column: 1/3;
}

aside ~ main {
    grid-column-start: 2;
}

button, .buttonWithDropdown {
    border: none;
    color: inherit;
    background-color: var(--secondary);
    font-family: inherit;
    border-radius: 5px;
}

button {
    padding: .375em .75em;

    &:not(.buttonWithDropdown *) {
        &:active, &.active {
            transform: translate(2px, 4px);
        }
    }

    &:hover {
        background-color: var(--secondary-shadow);
    }
}

.buttonWithDropdown {
    position: relative;
    display: inline-flex;

    &.show {
        border-radius: 5px 5px 0 0;
    }

    .openDropdown {
        border-bottom-left-radius: 0;
        border-top-left-radius: 0;
    }

    & > .dropdown {
        position: absolute;
        top: 100%;
        left: 0;
        right: 0;
        display: flex;
        flex-direction: column;

        & > button {
            border-top-left-radius: 0;
            border-top-right-radius: 0;

            &:not(:last-child) {
                border-bottom-left-radius: 0;
                border-bottom-right-radius: 0;
            }
        }

        &:not(.show *) {
            display: none;
        }
    }
}

a, a:hover, a:focus {
    color: inherit;
    text-decoration: none;
}

.notDisplayed, template {
    display: none;
}

#pendu {
    fill: transparent;
    stroke: var(--primary);
    stroke-width: 8px;
    stroke-linecap: round;
}

#mot {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 1em;

    .lettre {
        width: 3rem;
        height: 3rem;
        display: grid;
        align-content: center;
        justify-content: center;

        & > * {
            border-bottom: 3px solid var(--secondary);
            font-size: 35px;
            width: 35px;
            height: 40px;
            text-align: center;
        }
    }
}

#clavier {
    display: flex;
    flex-wrap: wrap;
    align-content: flex-start;
    justify-content: center;
    gap: .75em;
    max-width: 700px;
    margin: 0 auto;

    .lettreClavier {
        width: 4rem;
        height: 3rem;
        font-size: 1.5rem;

        background-color: var(--secondary);
        box-shadow: 1px 1px 2px var(--secondary);
        border: none;
        border-radius: 5px;

        display: grid;
        place-items: center;

        &:not(.good):not(.wrong) {
            cursor: pointer;
        }

        & > span {
            font-weight: bold;
            user-select: none;
        }

        &.good > span {
            color: var(--good);
        }

        &.wrong > span {
            color: var(--wrong);
        }
    }
}
